var NewTabEDK,newtab=newtab||{};newtab.General=function(){},newtab.General.prototype={init:function(){NewTabEDK.init(),NewTabEDK.translations(),NewTabEDK.PopupListener(),NewTabEDK.analytics()}},$(document).ready(function(){(new newtab.General).init()}),NewTabEDK={init:function(){chrome.storage.sync.get(["dk"],function(e){NewTabEDK.toggleDK("disabled"===e.dk)}),setTimeout(function(){$("body").addClass("transitions")},333)},translations:function(){for(var e=$("[data-i18n]"),n=0;n<e.length;++n){var t=e[n],a=t.getAttribute("data-i18n");t.innerHTML=NewTabEDK.getTranslation(a)}},getTranslation:function(e,n){return chrome.i18n.getMessage(e)},toggleDK:function(e){!0===e?$("body").addClass("EDK__body"):!1===e?$("body").removeClass("EDK__body"):$("body").toggleClass("EDK__body")},PopupListener:function(){chrome.extension.onRequest.addListener(function(e,n,t){switch(console.log(e.action),e.action){case"switch":NewTabEDK.toggleDK(),t({done:"switch"});break;case"redirect":chrome.storage.sync.get(["url"],function(e){var n=e.url;chrome.storage.sync.set({url:""}),window.location.href=n,t({done:"redirect to"+n})});break;case"testConnection":t({done:"ConnectionSuccess"});break;default:t({done:"no action"})}})},analytics:function(){NewTabEDK.service=analytics.getService("ecosia_extension"),NewTabEDK.service.getConfig().addCallback(function(t){chrome.storage.sync.get(["rgpd_consent"],function(e){var n=e.rgpd_consent;t.setTrackingPermitted(!0===n)})}),NewTabEDK.tracker=NewTabEDK.service.getTracker("UA-160182955-1"),NewTabEDK.tracker.sendAppView("NewTabView"),NewTabEDK.tracker.sendEvent("New tab","Open","L'utilisateur a ouvert un nouvel onglet"),$(".donate__link").on("click",function(){NewTabEDK.tracker.sendEvent("New tab","Donate","L'utilisateur a cliquÃ© sur le bouton de donation")})}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3RhYi5qcyJdLCJuYW1lcyI6WyJOZXdUYWJFREsiLCJuZXd0YWIiLCJHZW5lcmFsIiwicHJvdG90eXBlIiwiaW5pdCIsInRyYW5zbGF0aW9ucyIsIlBvcHVwTGlzdGVuZXIiLCJhbmFseXRpY3MiLCIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImNocm9tZSIsInN0b3JhZ2UiLCJzeW5jIiwiZ2V0IiwiaXRlbSIsInRvZ2dsZURLIiwiZGsiLCJzZXRUaW1lb3V0IiwiYWRkQ2xhc3MiLCJ0cmFuc2xhdGVfZWxtdHMiLCJpIiwibGVuZ3RoIiwia2V5IiwiZ2V0QXR0cmlidXRlIiwiaW5uZXJIVE1MIiwiZ2V0VHJhbnNsYXRpb24iLCJwYXJhbXMiLCJpMThuIiwiZ2V0TWVzc2FnZSIsInN0YXRlIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsImV4dGVuc2lvbiIsIm9uUmVxdWVzdCIsImFkZExpc3RlbmVyIiwicmVxdWVzdCIsInNlbmRlciIsInNlbmRSZXNwb25zZSIsImNvbnNvbGUiLCJsb2ciLCJhY3Rpb24iLCJkb25lIiwicmVzdWx0IiwidXJsIiwic2V0Iiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwic2VydmljZSIsImdldFNlcnZpY2UiLCJnZXRDb25maWciLCJhZGRDYWxsYmFjayIsImNvbmZpZyIsInBlcm1pdHRlZCIsInJncGRfY29uc2VudCIsInNldFRyYWNraW5nUGVybWl0dGVkIiwidHJhY2tlciIsImdldFRyYWNrZXIiLCJzZW5kQXBwVmlldyIsInNlbmRFdmVudCIsIm9uIl0sIm1hcHBpbmdzIjoiQUFDQSxJQW9CQUEsVUFwQkFDLE9BQUFBLFFBQUEsR0FFQUEsT0FBQUMsUUFBQSxhQUdBRCxPQUFBQyxRQUFBQyxVQUFBLENBQ0FDLEtBQUEsV0FDQUosVUFBQUksT0FDQUosVUFBQUssZUFDQUwsVUFBQU0sZ0JBQ0FOLFVBQUFPLGNBSUFDLEVBQUFDLFVBQUFDLE1BQUEsWUFDQSxJQUFBVCxPQUFBQyxTQUNBRSxTQUtBSixVQUFBLENBQ0FJLEtBQUEsV0FDQU8sT0FBQUMsUUFBQUMsS0FBQUMsSUFBQSxDQUFBLE1BQUEsU0FBQUMsR0FDQWYsVUFBQWdCLFNBQUEsYUFBQUQsRUFBQUUsTUFHQUMsV0FBQSxXQUNBVixFQUFBLFFBQUFXLFNBQUEsZ0JBQ0EsTUFFQWQsYUFBQSxXQUVBLElBREEsSUFBQWUsRUFBQVosRUFBQSxlQUNBYSxFQUFBLEVBQUFBLEVBQUFELEVBQUFFLFNBQUFELEVBQUEsQ0FDQSxJQUFBTixFQUFBSyxFQUFBQyxHQUNBRSxFQUFBUixFQUFBUyxhQUFBLGFBQ0FULEVBQUFVLFVBQUF6QixVQUFBMEIsZUFBQUgsS0FHQUcsZUFBQSxTQUFBSCxFQUFBSSxHQUNBLE9BQUFoQixPQUFBaUIsS0FBQUMsV0FBQU4sSUFFQVAsU0FBQSxTQUFBYyxJQUNBLElBQUFBLEVBQ0F0QixFQUFBLFFBQUFXLFNBQUEsY0FDQSxJQUFBVyxFQUNBdEIsRUFBQSxRQUFBdUIsWUFBQSxhQUVBdkIsRUFBQSxRQUFBd0IsWUFBQSxjQUdBMUIsY0FBQSxXQUNBSyxPQUFBc0IsVUFBQUMsVUFBQUMsWUFDQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUVBLE9BREFDLFFBQUFDLElBQUFKLEVBQUFLLFFBQ0FMLEVBQUFLLFFBQ0EsSUFBQSxTQUNBekMsVUFBQWdCLFdBQ0FzQixFQUFBLENBQUFJLEtBQUEsV0FDQSxNQUVBLElBQUEsV0FDQS9CLE9BQUFDLFFBQUFDLEtBQUFDLElBQUEsQ0FBQSxPQUFBLFNBQUE2QixHQUNBLElBQUFDLEVBQUFELEVBQUFDLElBQ0FqQyxPQUFBQyxRQUFBQyxLQUFBZ0MsSUFBQSxDQUFBRCxJQUFBLEtBRUFFLE9BQUFDLFNBQUFDLEtBQUFKLEVBQ0FOLEVBQUEsQ0FBQUksS0FBQSxjQUFBRSxNQUVBLE1BRUEsSUFBQSxpQkFDQU4sRUFBQSxDQUFBSSxLQUFBLHNCQUNBLE1BRUEsUUFDQUosRUFBQSxDQUFBSSxLQUFBLGtCQUtBbkMsVUFBQSxXQUNBUCxVQUFBaUQsUUFBQTFDLFVBQUEyQyxXQUFBLG9CQUVBbEQsVUFBQWlELFFBQUFFLFlBQUFDLFlBQ0EsU0FBQUMsR0FDQTFDLE9BQUFDLFFBQUFDLEtBQUFDLElBQUEsQ0FBQSxnQkFBQSxTQUFBNkIsR0FDQSxJQUFBVyxFQUFBWCxFQUFBWSxhQUNBRixFQUFBRyxzQkFBQSxJQUFBRixPQUlBdEQsVUFBQXlELFFBQUF6RCxVQUFBaUQsUUFBQVMsV0FBQSxrQkFFQTFELFVBQUF5RCxRQUFBRSxZQUFBLGNBRUEzRCxVQUFBeUQsUUFBQUcsVUFBQSxVQUFBLE9BQUEsMkNBRUFwRCxFQUFBLGlCQUFBcUQsR0FBQSxRQUFBLFdBQ0E3RCxVQUFBeUQsUUFBQUcsVUFBQSxVQUFBLFNBQUEiLCJmaWxlIjoibmV3dGFiLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVjbGFyZSBuYW1lc3BhY2VcbnZhciBuZXd0YWIgPSBuZXd0YWIgfHwge307XG5cbm5ld3RhYi5HZW5lcmFsID0gZnVuY3Rpb24gKCkge1xufTtcblxubmV3dGFiLkdlbmVyYWwucHJvdG90eXBlID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgTmV3VGFiRURLLmluaXQoKTtcbiAgICAgICAgTmV3VGFiRURLLnRyYW5zbGF0aW9ucygpO1xuICAgICAgICBOZXdUYWJFREsuUG9wdXBMaXN0ZW5lcigpO1xuICAgICAgICBOZXdUYWJFREsuYW5hbHl0aWNzKCk7XG4gICAgfVxufTtcblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgIHZhciBnID0gbmV3IG5ld3RhYi5HZW5lcmFsKCk7XG4gICAgZy5pbml0KCk7XG59KTtcblxuLy9TdGFydFxudmFyIE5ld1RhYkVESztcbk5ld1RhYkVESyA9IHtcbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KFsnZGsnXSwgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIE5ld1RhYkVESy50b2dnbGVESyhpdGVtLmRrID09PSAnZGlzYWJsZWQnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ3RyYW5zaXRpb25zJyk7XG4gICAgICAgIH0sIDMzMyk7XG4gICAgfSxcbiAgICB0cmFuc2xhdGlvbnM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHRyYW5zbGF0ZV9lbG10cyA9ICQoXCJbZGF0YS1pMThuXVwiKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0cmFuc2xhdGVfZWxtdHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBpdGVtID0gdHJhbnNsYXRlX2VsbXRzW2ldO1xuICAgICAgICAgICAgdmFyIGtleSA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWkxOG4nKTtcbiAgICAgICAgICAgIGl0ZW0uaW5uZXJIVE1MID0gTmV3VGFiRURLLmdldFRyYW5zbGF0aW9uKGtleSk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGdldFRyYW5zbGF0aW9uOiBmdW5jdGlvbiAoa2V5LCBwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIGNocm9tZS5pMThuLmdldE1lc3NhZ2Uoa2V5KTtcbiAgICB9LFxuICAgIHRvZ2dsZURLOiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgaWYgKHN0YXRlID09PSB0cnVlKSB7XG4gICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ0VES19fYm9keScpO1xuICAgICAgICB9IGVsc2UgaWYgKHN0YXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdFREtfX2JvZHknKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoJ2JvZHknKS50b2dnbGVDbGFzcygnRURLX19ib2R5Jyk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIFBvcHVwTGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2hyb21lLmV4dGVuc2lvbi5vblJlcXVlc3QuYWRkTGlzdGVuZXIoXG4gICAgICAgICAgICBmdW5jdGlvbiAocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXF1ZXN0LmFjdGlvbik7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChyZXF1ZXN0LmFjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwic3dpdGNoXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBOZXdUYWJFREsudG9nZ2xlREsoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRSZXNwb25zZSh7ZG9uZTogJ3N3aXRjaCd9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJyZWRpcmVjdFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoWyd1cmwnXSwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSByZXN1bHQudXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHt1cmw6ICcnfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW5kUmVzcG9uc2Uoe2RvbmU6ICdyZWRpcmVjdCB0bycgKyB1cmx9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInRlc3RDb25uZWN0aW9uXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBzZW5kUmVzcG9uc2Uoe2RvbmU6ICdDb25uZWN0aW9uU3VjY2Vzcyd9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBzZW5kUmVzcG9uc2Uoe2RvbmU6ICdubyBhY3Rpb24nfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0sXG4gICAgYW5hbHl0aWNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIE5ld1RhYkVESy5zZXJ2aWNlID0gYW5hbHl0aWNzLmdldFNlcnZpY2UoJ2Vjb3NpYV9leHRlbnNpb24nKTtcblxuICAgICAgICBOZXdUYWJFREsuc2VydmljZS5nZXRDb25maWcoKS5hZGRDYWxsYmFjayhcbiAgICAgICAgICAgIGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgICAgICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbJ3JncGRfY29uc2VudCddLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwZXJtaXR0ZWQgPSByZXN1bHQucmdwZF9jb25zZW50O1xuICAgICAgICAgICAgICAgICAgICBjb25maWcuc2V0VHJhY2tpbmdQZXJtaXR0ZWQocGVybWl0dGVkID09PSB0cnVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIE5ld1RhYkVESy50cmFja2VyID0gTmV3VGFiRURLLnNlcnZpY2UuZ2V0VHJhY2tlcignVUEtMTYwMTgyOTU1LTEnKTsgIC8vIEdBIFRyYWNraW5nIElELlxuXG4gICAgICAgIE5ld1RhYkVESy50cmFja2VyLnNlbmRBcHBWaWV3KCdOZXdUYWJWaWV3Jyk7XG5cbiAgICAgICAgTmV3VGFiRURLLnRyYWNrZXIuc2VuZEV2ZW50KCdOZXcgdGFiJywgJ09wZW4nLCBcIkwndXRpbGlzYXRldXIgYSBvdXZlcnQgdW4gbm91dmVsIG9uZ2xldFwiKTtcblxuICAgICAgICAkKCcuZG9uYXRlX19saW5rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgTmV3VGFiRURLLnRyYWNrZXIuc2VuZEV2ZW50KCdOZXcgdGFiJywgJ0RvbmF0ZScsIFwiTCd1dGlsaXNhdGV1ciBhIGNsaXF1w6kgc3VyIGxlIGJvdXRvbiBkZSBkb25hdGlvblwiKTtcbiAgICAgICAgfSlcbiAgICB9XG59O1xuIl19
