var NewTabEDK,main=main||{};main.General=function(){},main.General.prototype={init:function(){NewTabEDK.init(),NewTabEDK.translations(),NewTabEDK.PopupListener(),NewTabEDK.DonateLink()}},$(document).ready(function(){(new main.General).init()}),NewTabEDK={init:function(){chrome.storage.sync.get(["dk"],function(n){NewTabEDK.toggleDK("enabled"!==n.dk)}),setTimeout(function(){$("body").addClass("transitions")},333)},translations:function(){for(var n=$("[data-i18n]"),e=0;e<n.length;++e){var t=n[e],a=t.getAttribute("data-i18n");t.innerHTML=NewTabEDK.getTranslation(a)}},getTranslation:function(n,e){return chrome.i18n.getMessage(n)},toggleDK:function(n){!0===n?$("body").addClass("EDK__body"):!1===n?$("body").removeClass("EDK__body"):$("body").toggleClass("EDK__body")},PopupListener:function(){chrome.extension.onRequest.addListener(function(n,e,t){switch(console.log(n.action),n.action){case"switch":NewTabEDK.toggleDK(),t({done:"switch"});break;case"redirect":chrome.storage.sync.get(["url"],function(n){var e=n.url;chrome.storage.sync.set({url:""}),window.location.href=e,t({done:"redirect to"+e})});break;case"testConnection":t({done:"ConnectionSuccess"});break;default:t({done:"no action"})}})},DonateLink:function(){var n=navigator.language.replace("-","_");$(".donate__link").attr("href","https://paypal.me/GMirmand?locale.x="+n||"")}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3RhYi5qcyJdLCJuYW1lcyI6WyJOZXdUYWJFREsiLCJtYWluIiwiR2VuZXJhbCIsInByb3RvdHlwZSIsImluaXQiLCJ0cmFuc2xhdGlvbnMiLCJQb3B1cExpc3RlbmVyIiwiRG9uYXRlTGluayIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiY2hyb21lIiwic3RvcmFnZSIsInN5bmMiLCJnZXQiLCJpdGVtIiwidG9nZ2xlREsiLCJkayIsInNldFRpbWVvdXQiLCJhZGRDbGFzcyIsInRyYW5zbGF0ZV9lbG10cyIsImkiLCJsZW5ndGgiLCJrZXkiLCJnZXRBdHRyaWJ1dGUiLCJpbm5lckhUTUwiLCJnZXRUcmFuc2xhdGlvbiIsInBhcmFtcyIsImkxOG4iLCJnZXRNZXNzYWdlIiwic3RhdGUiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZUNsYXNzIiwiZXh0ZW5zaW9uIiwib25SZXF1ZXN0IiwiYWRkTGlzdGVuZXIiLCJyZXF1ZXN0Iiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImFjdGlvbiIsImRvbmUiLCJyZXN1bHQiLCJ1cmwiLCJzZXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJsYW5ndWFnZSIsIm5hdmlnYXRvciIsInJlcGxhY2UiLCJhdHRyIl0sIm1hcHBpbmdzIjoiQUFDQSxJQW9CQUEsVUFwQkFDLEtBQUFBLE1BQUEsR0FFQUEsS0FBQUMsUUFBQSxhQUdBRCxLQUFBQyxRQUFBQyxVQUFBLENBQ0FDLEtBQUEsV0FDQUosVUFBQUksT0FDQUosVUFBQUssZUFDQUwsVUFBQU0sZ0JBQ0FOLFVBQUFPLGVBSUFDLEVBQUFDLFVBQUFDLE1BQUEsWUFDQSxJQUFBVCxLQUFBQyxTQUNBRSxTQUtBSixVQUFBLENBQ0FJLEtBQUEsV0FDQU8sT0FBQUMsUUFBQUMsS0FBQUMsSUFBQSxDQUFBLE1BQUEsU0FBQUMsR0FDQWYsVUFBQWdCLFNBQUEsWUFBQUQsRUFBQUUsTUFHQUMsV0FBQSxXQUNBVixFQUFBLFFBQUFXLFNBQUEsZ0JBQ0EsTUFFQWQsYUFBQSxXQUVBLElBREEsSUFBQWUsRUFBQVosRUFBQSxlQUNBYSxFQUFBLEVBQUFBLEVBQUFELEVBQUFFLFNBQUFELEVBQUEsQ0FDQSxJQUFBTixFQUFBSyxFQUFBQyxHQUNBRSxFQUFBUixFQUFBUyxhQUFBLGFBQ0FULEVBQUFVLFVBQUF6QixVQUFBMEIsZUFBQUgsS0FHQUcsZUFBQSxTQUFBSCxFQUFBSSxHQUNBLE9BQUFoQixPQUFBaUIsS0FBQUMsV0FBQU4sSUFFQVAsU0FBQSxTQUFBYyxJQUNBLElBQUFBLEVBQ0F0QixFQUFBLFFBQUFXLFNBQUEsY0FDQSxJQUFBVyxFQUNBdEIsRUFBQSxRQUFBdUIsWUFBQSxhQUVBdkIsRUFBQSxRQUFBd0IsWUFBQSxjQUdBMUIsY0FBQSxXQUNBSyxPQUFBc0IsVUFBQUMsVUFBQUMsWUFDQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUVBLE9BREFDLFFBQUFDLElBQUFKLEVBQUFLLFFBQ0FMLEVBQUFLLFFBQ0EsSUFBQSxTQUNBekMsVUFBQWdCLFdBQ0FzQixFQUFBLENBQUFJLEtBQUEsV0FDQSxNQUVBLElBQUEsV0FDQS9CLE9BQUFDLFFBQUFDLEtBQUFDLElBQUEsQ0FBQSxPQUFBLFNBQUE2QixHQUNBLElBQUFDLEVBQUFELEVBQUFDLElBQ0FqQyxPQUFBQyxRQUFBQyxLQUFBZ0MsSUFBQSxDQUFBRCxJQUFBLEtBRUFFLE9BQUFDLFNBQUFDLEtBQUFKLEVBQ0FOLEVBQUEsQ0FBQUksS0FBQSxjQUFBRSxNQUVBLE1BRUEsSUFBQSxpQkFDQU4sRUFBQSxDQUFBSSxLQUFBLHNCQUNBLE1BRUEsUUFDQUosRUFBQSxDQUFBSSxLQUFBLGtCQUtBbkMsV0FBQSxXQUNBLElBQUEwQyxFQUFBQyxVQUFBRCxTQUFBRSxRQUFBLElBQUEsS0FDQTNDLEVBQUEsaUJBQUE0QyxLQUFBLE9BQUEsdUNBQUFILEdBQUEiLCJmaWxlIjoibmV3dGFiLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRGVjbGFyZSBuYW1lc3BhY2VcbnZhciBtYWluID0gbWFpbiB8fCB7fTtcblxubWFpbi5HZW5lcmFsID0gZnVuY3Rpb24gKCkge1xufTtcblxubWFpbi5HZW5lcmFsLnByb3RvdHlwZSA9IHtcbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIE5ld1RhYkVESy5pbml0KCk7XG4gICAgICAgIE5ld1RhYkVESy50cmFuc2xhdGlvbnMoKTtcbiAgICAgICAgTmV3VGFiRURLLlBvcHVwTGlzdGVuZXIoKTtcbiAgICAgICAgTmV3VGFiRURLLkRvbmF0ZUxpbmsoKTtcbiAgICB9XG59O1xuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGcgPSBuZXcgbWFpbi5HZW5lcmFsKCk7XG4gICAgZy5pbml0KCk7XG59KTtcblxuLy9TdGFydFxudmFyIE5ld1RhYkVESztcbk5ld1RhYkVESyA9IHtcbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KFsnZGsnXSwgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIE5ld1RhYkVESy50b2dnbGVESyhpdGVtLmRrICE9PSAnZW5hYmxlZCcpO1xuICAgICAgICB9KTtcblxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygndHJhbnNpdGlvbnMnKTtcbiAgICAgICAgfSwgMzMzKTtcbiAgICB9LFxuICAgIHRyYW5zbGF0aW9uczogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdHJhbnNsYXRlX2VsbXRzID0gJChcIltkYXRhLWkxOG5dXCIpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRyYW5zbGF0ZV9lbG10cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSB0cmFuc2xhdGVfZWxtdHNbaV07XG4gICAgICAgICAgICB2YXIga2V5ID0gaXRlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtaTE4bicpO1xuICAgICAgICAgICAgaXRlbS5pbm5lckhUTUwgPSBOZXdUYWJFREsuZ2V0VHJhbnNsYXRpb24oa2V5KTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZ2V0VHJhbnNsYXRpb246IGZ1bmN0aW9uIChrZXksIHBhcmFtcykge1xuICAgICAgICByZXR1cm4gY2hyb21lLmkxOG4uZ2V0TWVzc2FnZShrZXkpO1xuICAgIH0sXG4gICAgdG9nZ2xlREs6IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgICBpZiAoc3RhdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnRURLX19ib2R5Jyk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3RhdGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ0VES19fYm9keScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJCgnYm9keScpLnRvZ2dsZUNsYXNzKCdFREtfX2JvZHknKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgUG9wdXBMaXN0ZW5lcjogZnVuY3Rpb24gKCkge1xuICAgICAgICBjaHJvbWUuZXh0ZW5zaW9uLm9uUmVxdWVzdC5hZGRMaXN0ZW5lcihcbiAgICAgICAgICAgIGZ1bmN0aW9uIChyZXF1ZXN0LCBzZW5kZXIsIHNlbmRSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcXVlc3QuYWN0aW9uKTtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHJlcXVlc3QuYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJzd2l0Y2hcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIE5ld1RhYkVESy50b2dnbGVESygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VuZFJlc3BvbnNlKHtkb25lOiAnc3dpdGNoJ30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInJlZGlyZWN0XCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbJ3VybCddLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHJlc3VsdC51cmw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoe3VybDogJyd9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRSZXNwb25zZSh7ZG9uZTogJ3JlZGlyZWN0IHRvJyArIHVybH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwidGVzdENvbm5lY3Rpb25cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRSZXNwb25zZSh7ZG9uZTogJ0Nvbm5lY3Rpb25TdWNjZXNzJ30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRSZXNwb25zZSh7ZG9uZTogJ25vIGFjdGlvbid9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfSxcbiAgICBEb25hdGVMaW5rOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsYW5ndWFnZSA9IG5hdmlnYXRvci5sYW5ndWFnZS5yZXBsYWNlKCctJywgJ18nKTtcbiAgICAgICAgJCgnLmRvbmF0ZV9fbGluaycpLmF0dHIoXCJocmVmXCIsICdodHRwczovL3BheXBhbC5tZS9HTWlybWFuZD9sb2NhbGUueD0nICsgbGFuZ3VhZ2UgfHwgJycpO1xuICAgIH1cbn07XG4iXX0=
