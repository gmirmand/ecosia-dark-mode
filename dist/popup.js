var PopupEDK,main=main||{};main.General=function(){},main.General.prototype={init:function(){PopupEDK.init(),PopupEDK.googleSearch(),PopupEDK.closeAlert(),PopupEDK.showNoDomainAlert()}},$(document).ready(function(){(new main.General).init()}),PopupEDK={init:function(){PopupEDK.switch(),PopupEDK.onPopupOpen()},switch:function(){$(".switch-onoff__slide").on("click",function(o){o.preventDefault(),chrome.tabs.query({active:!0,currentWindow:!0},function(o){chrome.tabs.sendRequest(o[0].id,{action:"switch"},function(o){o&&("switch"===o.done?PopupEDK.switchBtn():console.log(o))})})})},logStorage:function(){chrome.storage.sync.get(["dk"],function(o){console.log(o.dk)})},switchBtn:function(){var n=$(".switch-onoff__slide");chrome.storage.sync.get(["dk"],function(o){"disabled"===o.dk?(chrome.storage.sync.set({dk:"enabled"}),n.removeClass("open")):(chrome.storage.sync.set({dk:"disabled"}),n.addClass("open"))}),PopupEDK.logStorage()},onPopupOpen:function(){var n=$(".switch-onoff__slide");void 0!==chrome.storage&&chrome.storage.sync.get(["dk"],function(o){"disabled"===o.dk?n.addClass("open"):("undefined"===o.dk&&chrome.storage.sync.set({dk:"disabled"}),n.removeClass("open"))})},googleSearch:function(){$("#google-search").on("submit",function(){var o=$(this).attr("action");$input=$(this).find(".search__input");var n=o+"?"+$input.attr("name")+"="+$input.val();chrome.storage.sync.set({url:n}),chrome.tabs.query({active:!0,currentWindow:!0},function(o){chrome.tabs.sendRequest(o[0].id,{action:"redirect"},function(o){o&&("redirect"===o.done?console.log("Redirected"):console.log(o))})})})},closeAlert:function(){var o=$(".alert"),n=[];void 0!==chrome.storage&&chrome.storage.sync.get(["alerts"],function(o){void 0!==o.alerts&&(n=o.alerts),void 0!==n&&$.each(n,function(o,n){$("#"+n).addClass("d-none")})}),setTimeout(function(){o.length!==n.length&&$(".warning__container").removeClass("d-none")},250),o.on("closed.bs.alert",function(){void 0!==chrome.storage&&(n.push(this.id),chrome.storage.sync.set({alerts:n}))})},showNoDomainAlert:function(){new Promise(function(n,e){chrome.tabs.query({active:!0,currentWindow:!0},function(o){chrome.tabs.sendRequest(o[0].id,{action:"testConnection"},function(o){o?"ConnectionSuccess"===o.done?n("ConnectionSuccess"):e(o):e("ConnectionFailed")})})}).then(function(o){console.log(o)}).catch(function(o){console.log(o),$(".popup__disabled, .popup__container").toggleClass("d-none")})}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvcHVwLmpzIl0sIm5hbWVzIjpbIlBvcHVwRURLIiwibWFpbiIsIkdlbmVyYWwiLCJwcm90b3R5cGUiLCJpbml0IiwiZ29vZ2xlU2VhcmNoIiwiY2xvc2VBbGVydCIsInNob3dOb0RvbWFpbkFsZXJ0IiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJzd2l0Y2giLCJvblBvcHVwT3BlbiIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY2hyb21lIiwidGFicyIsInF1ZXJ5IiwiYWN0aXZlIiwiY3VycmVudFdpbmRvdyIsInNlbmRSZXF1ZXN0IiwiaWQiLCJhY3Rpb24iLCJyZXNwIiwiZG9uZSIsInN3aXRjaEJ0biIsImNvbnNvbGUiLCJsb2ciLCJsb2dTdG9yYWdlIiwic3RvcmFnZSIsInN5bmMiLCJnZXQiLCJyZXN1bHQiLCJkayIsImJ1dHRvbiIsInNldCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJ1bmRlZmluZWQiLCJ0aGlzIiwiYXR0ciIsIiRpbnB1dCIsImZpbmQiLCJ1cmwiLCJ2YWwiLCIkYWxsQWxlcnRzIiwiY2hyb21lU3RvcmFnZUFsZXJ0cyIsImFsZXJ0cyIsImVhY2giLCJpIiwidmFsdWUiLCJzZXRUaW1lb3V0IiwibGVuZ3RoIiwicHVzaCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidGhlbiIsImNhdGNoIiwiZXJyb3IiLCJ0b2dnbGVDbGFzcyJdLCJtYXBwaW5ncyI6IkFBQ0EsSUFvQkFBLFNBcEJBQyxLQUFBQSxNQUFBLEdBRUFBLEtBQUFDLFFBQUEsYUFHQUQsS0FBQUMsUUFBQUMsVUFBQSxDQUNBQyxLQUFBLFdBQ0FKLFNBQUFJLE9BQ0FKLFNBQUFLLGVBQ0FMLFNBQUFNLGFBQ0FOLFNBQUFPLHNCQUlBQyxFQUFBQyxVQUFBQyxNQUFBLFlBQ0EsSUFBQVQsS0FBQUMsU0FDQUUsU0FLQUosU0FBQSxDQUVBSSxLQUFBLFdBQ0FKLFNBQUFXLFNBQ0FYLFNBQUFZLGVBRUFELE9BQUEsV0FDQUgsRUFBQSx3QkFDQUssR0FB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QWdDLEdBQ0FwRCxFQUFBLHVDQUFBcUQsWUFBQSIsImZpbGUiOiJwb3B1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIERlY2xhcmUgbmFtZXNwYWNlXHJcbnZhciBtYWluID0gbWFpbiB8fCB7fTtcclxuXHJcbm1haW4uR2VuZXJhbCA9IGZ1bmN0aW9uICgpIHtcclxufTtcclxuXHJcbm1haW4uR2VuZXJhbC5wcm90b3R5cGUgPSB7XHJcbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgUG9wdXBFREsuaW5pdCgpO1xyXG4gICAgICAgIFBvcHVwRURLLmdvb2dsZVNlYXJjaCgpO1xyXG4gICAgICAgIFBvcHVwRURLLmNsb3NlQWxlcnQoKTtcclxuICAgICAgICBQb3B1cEVESy5zaG93Tm9Eb21haW5BbGVydCgpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGcgPSBuZXcgbWFpbi5HZW5lcmFsKCk7XHJcbiAgICBnLmluaXQoKTtcclxufSk7XHJcblxyXG4vL1N0YXJ0XHJcbnZhciBQb3B1cEVESztcclxuUG9wdXBFREsgPSB7XHJcbiAgICAvL0luaXRcclxuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBQb3B1cEVESy5zd2l0Y2goKTtcclxuICAgICAgICBQb3B1cEVESy5vblBvcHVwT3BlbigpO1xyXG4gICAgfSxcclxuICAgIHN3aXRjaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBidXR0b24gPSAkKCcuc3dpdGNoLW9ub2ZmX19zbGlkZScpO1xyXG4gICAgICAgIGJ1dHRvbi5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGNocm9tZS50YWJzLnF1ZXJ5KHthY3RpdmU6IHRydWUsIGN1cnJlbnRXaW5kb3c6IHRydWV9LCBmdW5jdGlvbiAodGFicykge1xyXG4gICAgICAgICAgICAgICAgY2hyb21lLnRhYnMuc2VuZFJlcXVlc3QodGFic1swXS5pZCwge2FjdGlvbjogXCJzd2l0Y2hcIn0sIGZ1bmN0aW9uIChyZXNwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3AuZG9uZSA9PT0gXCJzd2l0Y2hcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUG9wdXBFREsuc3dpdGNoQnRuKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBsb2dTdG9yYWdlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoWydkayddLCBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdC5kayk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgc3dpdGNoQnRuOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGJ1dHRvbiA9ICQoJy5zd2l0Y2gtb25vZmZfX3NsaWRlJyk7XHJcbiAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoWydkayddLCBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQuZGsgPT09ICdkaXNhYmxlZCcpIHtcclxuICAgICAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHtkazogJ2VuYWJsZWQnfSk7XHJcbiAgICAgICAgICAgICAgICBidXR0b24ucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHtkazogJ2Rpc2FibGVkJ30pO1xyXG4gICAgICAgICAgICAgICAgYnV0dG9uLmFkZENsYXNzKCdvcGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBQb3B1cEVESy5sb2dTdG9yYWdlKCk7XHJcbiAgICB9LFxyXG4gICAgb25Qb3B1cE9wZW46IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYnV0dG9uID0gJCgnLnN3aXRjaC1vbm9mZl9fc2xpZGUnKTtcclxuICAgICAgICBpZiAoY2hyb21lLnN0b3JhZ2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbJ2RrJ10sIGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGsgPT09ICdkaXNhYmxlZCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b24uYWRkQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzdWx0LmRrID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHtkazogJ2Rpc2FibGVkJ30pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbi5yZW1vdmVDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b24ucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGdvb2dsZVNlYXJjaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNnb29nbGUtc2VhcmNoJykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGFjdGlvbiA9ICQodGhpcykuYXR0cignYWN0aW9uJyk7XHJcbiAgICAgICAgICAgICRpbnB1dCA9ICQodGhpcykuZmluZCgnLnNlYXJjaF9faW5wdXQnKTtcclxuICAgICAgICAgICAgdmFyIG5hbWUgPSAkaW5wdXQuYXR0cignbmFtZScpO1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSAkaW5wdXQudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBhY3Rpb24gKyAnPycgKyBuYW1lICsgJz0nICsgdmFsdWU7XHJcbiAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHt1cmw6IHVybH0pO1xyXG5cclxuICAgICAgICAgICAgY2hyb21lLnRhYnMucXVlcnkoe2FjdGl2ZTogdHJ1ZSwgY3VycmVudFdpbmRvdzogdHJ1ZX0sIGZ1bmN0aW9uICh0YWJzKSB7XHJcbiAgICAgICAgICAgICAgICBjaHJvbWUudGFicy5zZW5kUmVxdWVzdCh0YWJzWzBdLmlkLCB7YWN0aW9uOiBcInJlZGlyZWN0XCJ9LCBmdW5jdGlvbiAocmVzcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwLmRvbmUgPT09IFwicmVkaXJlY3RcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlZGlyZWN0ZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3ApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGNsb3NlQWxlcnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgJGFsbEFsZXJ0cyA9ICQoJy5hbGVydCcpLFxyXG4gICAgICAgICAgICBjaHJvbWVTdG9yYWdlQWxlcnRzID0gW107XHJcbiAgICAgICAgaWYgKGNocm9tZS5zdG9yYWdlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoWydhbGVydHMnXSwgZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5hbGVydHMgIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgICAgICAgICBjaHJvbWVTdG9yYWdlQWxlcnRzID0gcmVzdWx0LmFsZXJ0cztcclxuICAgICAgICAgICAgICAgIGlmIChjaHJvbWVTdG9yYWdlQWxlcnRzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goY2hyb21lU3RvcmFnZUFsZXJ0cywgZnVuY3Rpb24gKGksIHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyMnICsgdmFsdWUpLmFkZENsYXNzKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCRhbGxBbGVydHMubGVuZ3RoICE9PSBjaHJvbWVTdG9yYWdlQWxlcnRzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgJCgnLndhcm5pbmdfX2NvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIDI1MCk7XHJcblxyXG4gICAgICAgICRhbGxBbGVydHMub24oJ2Nsb3NlZC5icy5hbGVydCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGNocm9tZS5zdG9yYWdlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGNocm9tZVN0b3JhZ2VBbGVydHMucHVzaCh0aGlzLmlkKTtcclxuICAgICAgICAgICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHthbGVydHM6IGNocm9tZVN0b3JhZ2VBbGVydHN9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIHNob3dOb0RvbWFpbkFsZXJ0OiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciB0cnlDb25uZWN0aW9uID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICBjaHJvbWUudGFicy5xdWVyeSh7YWN0aXZlOiB0cnVlLCBjdXJyZW50V2luZG93OiB0cnVlfSwgZnVuY3Rpb24gKHRhYnMpIHtcclxuICAgICAgICAgICAgICAgIGNocm9tZS50YWJzLnNlbmRSZXF1ZXN0KHRhYnNbMF0uaWQsIHthY3Rpb246IFwidGVzdENvbm5lY3Rpb25cIn0sIGZ1bmN0aW9uIChyZXNwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3AuZG9uZSA9PT0gXCJDb25uZWN0aW9uU3VjY2Vzc1wiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCdDb25uZWN0aW9uU3VjY2VzcycpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHJlc3ApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdDb25uZWN0aW9uRmFpbGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0cnlDb25uZWN0aW9uLnRoZW4oXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codmFsdWUpO1xyXG4gICAgICAgICAgICB9KS5jYXRjaChcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgICAgICAgICAkKCcucG9wdXBfX2Rpc2FibGVkLCAucG9wdXBfX2NvbnRhaW5lcicpLnRvZ2dsZUNsYXNzKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn07Il19
