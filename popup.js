var PopupEDK,main=main||{};main.General=function(){},main.General.prototype={init:function(){PopupEDK.init(),PopupEDK.googleSearch(),PopupEDK.closeAlert()}},$(document).ready(function(){(new main.General).init()}),PopupEDK={init:function(){PopupEDK.switch(),PopupEDK.onPopupOpen()},switch:function(){$(".switch-onoff__slide").on("click",function(e){e.preventDefault(),chrome.tabs.query({active:!0,currentWindow:!0},function(e){chrome.tabs.sendRequest(e[0].id,{action:"switch"},function(e){e&&("switch"===e.done?PopupEDK.switchBtn():console.log(e))})})})},logStorage:function(){chrome.storage.sync.get(["dk"],function(e){console.log(e.dk)})},switchBtn:function(){var o=$(".switch-onoff__slide");chrome.storage.sync.get(["dk"],function(e){"disabled"===e.dk?(chrome.storage.sync.set({dk:"enabled"}),o.removeClass("open")):(chrome.storage.sync.set({dk:"disabled"}),o.addClass("open"))}),PopupEDK.logStorage()},onPopupOpen:function(){var o=$(".switch-onoff__slide");void 0!==chrome.storage&&chrome.storage.sync.get(["dk"],function(e){"disabled"===e.dk?o.addClass("open"):("undefined"===e.dk&&chrome.storage.sync.set({dk:"disabled"}),o.removeClass("open"))})},googleSearch:function(){$("#google-search").on("submit",function(){var e=$(this).attr("action");$input=$(this).find(".search__input");var o=e+"?"+$input.attr("name")+"="+$input.val();chrome.storage.sync.set({url:o}),chrome.tabs.query({active:!0,currentWindow:!0},function(e){chrome.tabs.sendRequest(e[0].id,{action:"redirect"},function(e){e&&("redirect"===e.done?console.log("Redirected"):console.log(e))})})})},closeAlert:function(){var e=$(".alert"),o=[];void 0!==chrome.storage&&chrome.storage.sync.get(["alerts"],function(e){void 0!==e.alerts&&(o=e.alerts),void 0!==o&&$.each(o,function(e,o){$("#"+o).addClass("d-none")})}),setTimeout(function(){e.length!==o.length&&$(".warning__container").removeClass("d-none")},250),e.on("closed.bs.alert",function(){void 0!==chrome.storage&&(o.push(this.id),chrome.storage.sync.set({alerts:o}))})}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
